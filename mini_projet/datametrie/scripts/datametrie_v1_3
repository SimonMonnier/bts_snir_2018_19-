#!/bin/bash

mean=0
workDays=2
countDays=0
meanLoading=0
pingmax="1000"
maxTimePing="0.0"
minTimePing="500.0"
maxTimeLoading="0.0"
minTimeLoading="500.0"

declare -i tf_hours=0
declare -i NbMesures=0
declare -i Fructueux=0
declare -i Infructueux=0
declare -i injoignable=0

#On demande quel site l'utilisateur souhaite tester
while [ "$correct" != "oui" ]
do
	echo -n "Entrez le nom du "site" :"
	read site
	echo -n "Vous avez choisi $site, es-ce correct?(oui/non): "
	read correct
		if [ "$correct" = "oui" ] ; then
		echo "Vous avez bien choisi" $site
		echo "Test en cours, veuillez patienter..."
	elif [ "$correct" = "non" ] ; then
		echo "Veuillez recommencer"

fi
done
while [ $countDays -lt $workDays ]
do
	while [ $tf_hours -lt 4 ]
	do
	#On test si le site est joignable ou non 
		ping -q -c2 $site > /dev/null
		if [ $? -eq 0 ]
		then
			#echo "Le serveur est actuellement joignable."
			#On incrémente le  nombre de mesures
			NbMesures=$NbMesures+1
			#On extrait le temps de réponse au ping dans une variable
			replyTime=$(ping -c1 $site | grep "time=" | awk '{$NF=""; print $0}' $rawText | awk '{print $NF}' | cut -c6-20)
			#On test si le temps de réponse est fructueux ou non et on les enregistre
			if test $(echo "$replyTime > $pingmax" | bc -l) -eq 1 ; then
				Infructueux=$Infructueux+1
				#echo "Temps de réponse supérieur à 1000ms"
			else	
				Fructueux=$Fructueux+1
				#echo "Temps de réponse satisfaisant"
			fi
			#On calcule et stock le ping max et min
			if test $(echo "$replyTime > $maxTimePing" | bc -l) -eq 1 ;then
				maxTimePing="$replyTime"
				dateMaxPing=$(date | awk '{$NF=""; print $0}' )
			fi
			if test $(echo "$replyTime < $minTimePing" | bc -l) -eq 1;then
				minTimePing="$replyTime"
				dateMinPing=$(date | awk '{$NF=""; print $0}' )
			fi
			#On calcule et stock la moyenne du temps de réponse
			if test $(echo "$mean == 0" | bc -l) -eq 1;then
				mean="$replyTime"
			else
				mean=$(echo "scale=3; ($mean + $replyTime) / 2" | bc -l)
			fi
			#On récupère le temps de téléchargement dans une variable, puis on éfface le fichier index
			wget $site &> temporaire.txt
			loadingTime=$(cat temporaire.txt | grep "=" | sed "s/.$//" | awk '{print $NF}' | sed 's/.*=//' | sed 's/,/./')
			rm index.html
			rm temporaire.txt
			#On calcule et stock le chargement max et min
			if test $(echo "$loadingTime > $maxTimeLoading" | bc -l ) -eq 1;then
				maxTimeLoading="$loadingTime"
				dateMaxLoading=$(date | awk '{$NF=""; print $0}' )
			fi
			if test $(echo "$loadingTime < $minTimeLoading" | bc -l ) -eq 1;then
				minTimeLoading="$loadingTime"
				dateMinLoading=$(date | awk '{$NF=""; print $0}' )
			fi
			#On calcule et stock la moyenne du temps de chargement
			if test $(echo "$meanLoading == 0" | bc -l) -eq 1;then
				meanLoading="$loadingTime"
			else
				meanLoading=$(echo "scale=3; ($meanLoading + $loadingTime) / 2" | bc -l)
			fi
			sleep 6s
			tf_hours=$(($tf_hours+1))
		else
			#echo "Le serveur n'est pas joinable."
			#On incrémente le nombre de mesures et injoignable
			NbMesures=$NbMesures+1
			injoingnable=$injoignable+1
			sleep 3s
			tf_hours=$tf_hours+1
		fi
	done
	tf_hours=0
	countDays=$(($countDays+1))
done
echo -e "Nom du site $site\n\nnombre de mesure = $NbMesures\n\n\
	temps ping min = $minTimePing\ntemps ping moyen = $mean\n \
	temps ping max = $maxTimePing\n\nle temps ping max à été relevé le $dateMaxPing\n \
	le temps ping min à été relevé le $dateMinPing\n\ntemps load min = $minTimeLoading\n \
	temps load moyen = $meanLoading\ntemps load max = $maxTimeLoading\n\n \
	le temps loading min à été relevé le $dateMinLoading\n \
	le temps loading max à été relevé le $dateMaxLoading\n\n \
	test fructueux = $Fructueux\ntest infructueux = $Infructueux\n\n \
	Sur $countDays jours l'hote à été injoignable $injoignable fois\n\n\n \
	Bonne soirée !!!" | mail "Info-serveur" s.monnier44440@gmail.com
